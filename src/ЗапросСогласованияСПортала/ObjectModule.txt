Перем ИмяСервера, ВременныйФайл, ФайлВыбранВручную;

Функция Создать(ИмяФайла) Экспорт
	ВременныйФайл = ?(ЗначениеЗаполнено(ИмяФайла),ИмяФайла,ПолучитьИмяВременногоФайла(".xlsx"));
	ФайлВыбранВручную = Ложь;
	Возврат ЭтотОбъект;	
КонецФункции

Функция УдалитьВременныйФайл() Экспорт
	Если Не ФайлВыбранВручную Тогда УдалитьФайлы(ВременныйФайл); КонецЕсли;
	Возврат ЭтотОбъект;
КонецФункции


Функция МакетВТаблицуЗначений(Макет) Экспорт
	Перем ТЗ;
	ТЗ=Новый ТаблицаЗначений();
	Для Стр=1 По Макет.ВысотаТаблицы Цикл
		Если Стр>1 Тогда
			ТекСтр=ТЗ.Добавить();
		КонецЕсли;
		ПустаяСтрока=истина;
		Для Кол=1 По Макет.ШиринаТаблицы Цикл
			Яч=Макет.Область(Стр, Кол);
			Если Яч.СодержитЗначение Тогда
				Зн=Яч.Значение;
			Иначе
				Зн=Яч.Текст;
			КонецЕсли;
			Если ТипЗнч(Зн)=Тип("Строка") И ПустаяСтрока(Зн) Тогда
				Зн=Неопределено;
			КонецЕсли;
			
			Если Стр=1 Тогда
				ТЗ.Колонки.Добавить(Зн, Новый ОписаниеТипов("Строка", ,
				Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
				
			Иначе
				ТекСтр[Кол-1]=Зн;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Возврат ТЗ;
КонецФункции 

// *** ССА , АИС Контроль материалов релиз 1 , Желудков 
/// Функция читает Файл Эксель В ТаблицуЗначений
///Колонки файла необходимо задать в том же порядке что они идут в файле
Функция ПрочитатьФайлЭксельВТаблицуЗначений(ФайлИмпорта, КолонкиФайла = Неопределено, НомерПервойСтрокиСДанными = 2, НомерПервойКолонки = 1 ) Экспорт
	Док = Новый COMОбъект("Excel.Application");
	Книга = Док.Workbooks.Open(ФайлИмпорта);
	ExcelЛист = Док.Sheets(1);
	ActiveCell = Док.ActiveCell.SpecialCells(11);
	КоличествоСтрок = ActiveCell.Row;
	КоличествоКолонок = ActiveCell.Column;	
	
	ТаблицаЗагрузки = Новый ТаблицаЗначений;
	Если ЗначениеЗаполнено(КолонкиФайла) Тогда
		ФорматФайла = Новый Структура(КолонкиФайла);
		НомерКолонки = НомерПервойКолонки;
		Для каждого Колонка из ФорматФайла Цикл
			ТаблицаЗагрузки.Колонки.Добавить(Колонка.Ключ, Новый ОписаниеТипов("Строка", ,
			Новый КвалификаторыСтроки(0, ДопустимаяДлина.Переменная)));
			ФорматФайла[Колонка.Ключ] = НомерКолонки;
			НомерКолонки = НомерКолонки + 1;
		КонецЦикла;
		ТаблицаЗагрузки.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число",
		Новый КвалификаторыЧисла(0, 0, ДопустимыйЗнак.Неотрицательный)));
	Иначе
		ФорматФайла = Новый Структура();
		Для НомерКолонки = НомерПервойКолонки По КоличествоКолонок  Цикл
			НаименованиеКолонки = СокрЛП(ExcelЛист.Cells(1, НомерКолонки).Value);
			ИмяКолонки = "Колонка"+Формат(НомерКолонки,"ЧГ=0");
			ТаблицаЗагрузки.Колонки.Добавить(ИмяКолонки, Новый ОписаниеТипов("Строка", ,
			Новый КвалификаторыСтроки(0, ДопустимаяДлина.Переменная)), НаименованиеКолонки);
			ФорматФайла.Вставить(ИмяКолонки, НомерКолонки);
			НомерКолонки = НомерКолонки + 1;
		КонецЦикла;
		ТаблицаЗагрузки.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число",
		Новый КвалификаторыЧисла(0, 0, ДопустимыйЗнак.Неотрицательный)));
	КонецЕсли;
	
	Для счСтроки = НомерПервойСтрокиСДанными По КоличествоСтрок Цикл	
		НоваяСтрока = ТаблицаЗагрузки.Добавить();
		НоваяСтрока.НомерСтроки = счСтроки;
		Для Каждого	Колонка Из ФорматФайла Цикл
			НоваяСтрока[Колонка.Ключ] = СокрЛП(ExcelЛист.Cells(счСтроки, Колонка.Значение).Value);
		КонецЦикла;
	КонецЦикла;
	Книга.Close();
	Док.Application.Quit();
	Возврат ТаблицаЗагрузки;
КонецФункции//***ССА ,

Функция СкачатьВФайлИз(СерверИмя, ПутьКФайлуНаСервере) Экспорт
	ИмяСервера  = СерверИмя;
	Соединение = Новый HTTPСоединение(ИмяСервера, 80, Логин, Пароль, Неопределено , Ложь);
	Заголовки = Новый Соответствие;
	//ПутьКФайлуНаСервере = "/cabinet/Pages/default.aspx";
	//ПутьКФайлуНаСервере = "/docs/it/services/_layouts/bcs/ExportToExcel.aspx?entitynamespace=SollersDV.ITIL.SharePoint.Bcs&entityname=ProvisionedService&findermethodname=GetServiceListForExport&worksheetname=ITServices&filename=Services";
	Заголовки.Вставить("Accept",	"application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*");
	Заголовки.Вставить("Host",	"msmr");
	//Заголовки.Вставить("Cookie",	"WSS_ExpGroup_{2FA4E59F-DCC5-40E8-A63B-60883EA2F8C1}=%253B%2523%25D0%259C%25D0%2590%25D0%2597%25D0%2594%25D0%2590%2520%25D0%25A1%25D0%259E%25D0%259B%25D0%259B%25D0%2595%25D0%25A0%25D0%25A1%2520%25D0%259C%25D0%25B0%25D0%25BD%25D1%2583%25D1%2584%25D1%258D%25D0%25BA%25D1%2587%25D1%2583%25D1%2580%25D0%25B8%25D0%25BD%25D0%25B3%2520%25D0%25A0%25D1%2583%25D1%2581%253B%2523; WSS_ExpGroupWPList=%7B2FA4E59F-DCC5-40E8-A63B-60883EA2F8C1%7D; databaseBtnText=0; databaseBtnDesc=0");
	//Заголовки.Вставить("Cookie",	"databaseBtnText=0; databaseBtnDesc=0");
	Заголовки.Вставить("Connection",	"Keep-Alive");
	Заголовки.Вставить("Cache-Control",	"no-cache");
	Заголовки.Вставить("User-Agent",	"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3)");
	Заголовки.Вставить("Referer","http://msmr/docs/it/services/default.aspx");
	//ПутьКФайлуНаСервере =  "/_layouts/1049/styles/Themable/search.css?rev=6GjM38EHbZL%2F5Zzh2HrV5w%3D%3D";
	HTTPЗапрос = Новый HTTPЗапрос(ПутьКФайлуНаСервере, Заголовки);
	Сообщить(HTTPЗапрос.АдресРесурса);
	
	//HTTPЗапрос.УстановитьИмяФайлаТела("e:\ВременныйФайл.xlsx");
	Ответ = Соединение.Получить(HTTPЗапрос);//, "e:\ВременныйФайл.xlsx");
	Файл = Ответ.ПолучитьТелоКакДвоичныеДанные();
	//Сообщить(Строка(Ответ.КодСостояния) + " файл "+ Файл);
	
	Если Ответ.КодСостояния = 200 Тогда
		
		Файл.Записать(ВременныйФайл);
	Иначе
		КопироватьФайл(ЭтотОбъект.ПолучитьФорму("ФормаРучнойЗагрузки").ОткрытьМодально(), ВременныйФайл);
	КонецЕсли;
	Возврат ЭтотОбъект;
КонецФункции
//

