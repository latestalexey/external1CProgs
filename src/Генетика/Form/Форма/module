перем КоличествоСкобок, ГенетическаяТаблица,  ТабличнаяФормула;

//Расставить правильно (по другому) скобки, чтобы на экран вывелось число 850
//public class Solution
//{
//	public static void main(String[] args)
//	{
//		System.out.println( (1 + 2)  (3 + 4)  (5 + 6)  (7 + 8)  (9 + 10)  (11 + 12)  (13 + 14) + 15);
//	}
//}

Процедура КнопкаВыполнитьНажатие(Кнопка)
	Формула ="(1+ 2)*(3 + 4)*(5 + 6)*(7 + 8)*(9 + 10)*(11 + 12)*(13 + 14)+15 ";  //Шаблон вычислений 
	
	КоличествоСкобок = СтрЧислоВхождений(Формула, ")"); //Количество пар скобок 
	Формула = СтрЗаменить(Формула, "(", " ");  //создаем новые Скобко-места в виде пробелов
	Формула = СтрЗаменить(Формула, ")", " ");  //Теперь любой пробел в формуле может быть заменен скобкой
	ТабличнаяФормула = РазложитьФормулуВТаблицу(Формула); 
	
	ГенетическаяТаблица = НоваяТаблицаГенетики();
	//Начальная популяция
	
	ЗаполнитьГеныНачинаяС( ГенетическаяТаблица, 1 , 10);
	
	Начало = 1;
	Пред = 0;
	//Цикл жизни 
	Пока Истина Цикл
		//Рождение видов
		ТаблицаЗарождения = НоваяТаблицаГенетики();
		ЗаполнитьГеныНачинаяС( ТаблицаЗарождения, Начало, 10);
		СкреститьВиды(ГенетическаяТаблица, ТаблицаЗарождения);
		//Мутация
		МассивМутаций = Новый Массив;
		Для каждого Геном из ГенетическаяТаблица Цикл
			Мутации = ПолучитьМутации(Геном, 10);
			МассивМутаций.Добавить(Мутации);
		КонецЦикла;
		
		Для каждого Мутация из МассивМутаций Цикл
			СкреститьВиды(ГенетическаяТаблица, Мутация);
		КонецЦикла;
		//Следующее поколение
		Начало = Начало + 11;
		
		ОбработкаПрерыванияПользователя();
		Если Не Пред = ГенетическаяТаблица.Получить(0).Результат Тогда
			Сообщить(ГенетическаяТаблица.Получить(0).ФормулаСтрокой + " = " +  ГенетическаяТаблица.Получить(0).Результат+ "  в поколении = "+  ГенетическаяТаблица.Получить(0).НомерМутации+ "   и в эпоху = "+ Цел(Начало/10));
		КонецЕсли;
		
		Пред = ГенетическаяТаблица.Получить(0).Результат;
	КонецЦикла;
КонецПроцедуры

Процедура Оживить(Геном)
	Попытка
		Геном.Результат = Вычислить(Геном.ФормулаСтрокой);
		Геном.БлизостьКЦели = АбсЗначение( Геном.Результат - Цель);
		Геном.Живой = Истина;
	Исключение
		Геном.Результат = Неопределено;
		Геном.БлизостьКЦели = 1000000000000;
		Геном.Живой = Ложь;
	КонецПопытки;
КонецПроцедуры

Функция ПолучитьМутации(Геном, Количество)
	Мутации = НоваяТаблицаГенетики();
	Для н = 1 по Количество Цикл
		Мутаген = Мутации.Добавить();
		ЗаполнитьЗначенияСвойств(Мутаген, Геном);
		Мутаген.НомерМутации = Геном.НомерМутации + 1;
		РазвитьГеном(Мутаген.ФормулаСписком, Мутаген.ГСЧ);
		Мутаген.ФормулаСтрокой = ПолучитьФормулуСтрокой(Мутаген.ФормулаСписком);
		Оживить(Мутаген);
	КонецЦикла;
	СортироватьВеса(Мутации);
	Возврат Мутации;
КонецФункции

Процедура СкреститьВиды(ОсновнаяТаблицаГенов, ТаблицаОтветвленияГенов)
	н = 0;                 
	Для каждого Строка из ОсновнаяТаблицаГенов Цикл
		СтрокаЗарождения = ТаблицаОтветвленияГенов.Получить(н);
		Если СтрокаЗарождения.БлизостьКЦели < Строка.БлизостьКЦели Тогда
			ЗаполнитьЗначенияСвойств( Строка, СтрокаЗарождения);
			н = н + 1; 
		КонецЕсли;
	КонецЦикла;
	СортироватьВеса(ОсновнаяТаблицаГенов);
КонецПроцедуры

Процедура ЗаполнитьГеныНачинаяС( Таблица, С , Количество)
	Для н = С по С + Количество Цикл
		Геном = Таблица.Добавить();
		Геном.НомерМутации = 0;
		Геном.НомерПервогоГенома = н;
		Геном.ГСЧ = Новый ГенераторСлучайныхЧисел(н);
		Геном.ФормулаСписком =  ПолучитьГеном(ТабличнаяФормула, Геном.ГСЧ);
		Геном.ФормулаСтрокой = ПолучитьФормулуСтрокой(Геном.ФормулаСписком);
		Оживить(Геном);
	КонецЦикла;
	СортироватьВеса(Таблица);
КонецПроцедуры

Функция НоваяТаблицаГенетики()
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("НомерМутации");  //Поколение
	Таблица.Колонки.Добавить("ФормулаСписком"); //ДНК
	Таблица.Колонки.Добавить("НомерПервогоГенома"); //семя
	Таблица.Колонки.Добавить("ГСЧ");      // Солнце
	Таблица.Колонки.Добавить("ФормулаСтрокой"); //Секвентирование
	Таблица.Колонки.Добавить("Результат"); //РНК
	Таблица.Колонки.Добавить("БлизостьКЦели"); //Вес эволюции
	Таблица.Колонки.Добавить("Живой"); // Спасибо что...
	Возврат Таблица;
КонецФункции

Функция АбсЗначение(Выражение)
	Возврат ?(Выражение >= 0, Выражение, -Выражение);
КонецФункции

Процедура СортироватьВеса(Таблица)
	Таблица.Сортировать("БлизостьКЦели Возр");	
КонецПроцедуры

Функция ПолучитьФормулуСтрокой(ФормулаСписком)
	НоваяФормула = "";
	Для каждого Строка из ФормулаСписком Цикл
		НоваяФормула = НоваяФормула + Строка.Знакоместо + Строка.Скобкоместо;
	КонецЦикла;
	Возврат НоваяФормула;	
КонецФункции

Процедура РазвитьГеном(ФормулаСписком, ГСЧ)
	Скобка = ПолучитьИУдалитьСкобку(ФормулаСписком, ГСЧ);
	СгенерироватьСкобку(ФормулаСписком, ГСЧ,  Скобка);
КонецПроцедуры

Функция ПолучитьИУдалитьСкобку(ФормулаСписком, ГСЧ)
	Генерировать = Истина;
	Пока Генерировать Цикл
		Индекс = ГСЧ.СлучайноеЧисло(0, ФормулаСписком.Количество()-1);
		Строка = ФормулаСписком.Получить(Индекс);
		Если Строка.Скобкоместо = "" Тогда Продолжить; КонецЕсли;
		Скобка = Строка.Скобкоместо;
		Генерировать = Ложь;
		Строка.Скобкоместо = "";
	КонецЦикла;
	Возврат Скобка;
КонецФункции

Функция ПолучитьГеном(ТабличнаяФормула, ГСЧ)
	ФормулаСписком = ТабличнаяФормула.Скопировать();
	СгенерироватьСкобки(ФормулаСписком, ГСЧ,  ")"); //Сначала генерируем закрывающиескобки
	СгенерироватьСкобки(ФормулаСписком, ГСЧ,  "(");
	Возврат ФормулаСписком;// ПолучитьФормулуСтрокой(ФормулаСписком);
КонецФункции	

Процедура СгенерироватьСкобки(ФормулаСписком, ГСЧ,  Скобка)
	Для н = 1 по КоличествоСкобок Цикл
		СгенерироватьСкобку(ФормулаСписком, ГСЧ,  Скобка);
	КонецЦикла;
КонецПроцедуры

Процедура СгенерироватьСкобку(ФормулаСписком, ГСЧ,  Скобка)
	Генерировать = Истина;
	Пока Генерировать Цикл
		Индекс = ГСЧ.СлучайноеЧисло(0, ФормулаСписком.Количество()-1);
		Строка = ФормулаСписком.Получить(Индекс);
		Если Не Строка.Скобкоместо = "" Тогда Продолжить; КонецЕсли;
		Если Скобка = ")" И Не Строка.МожноЗакрыть Тогда Продолжить; КонецЕсли;
		Если Скобка = "(" И Строка.МожноЗакрыть Тогда Продолжить; КонецЕсли;
		Генерировать = Ложь;
		Строка.Скобкоместо = Скобка;
	КонецЦикла;
КонецПроцедуры

Функция РазложитьФормулуВТаблицу(Формула)
	ТабличнаяФормула = Новый ТаблицаЗначений;
	ТабличнаяФормула.Колонки.Добавить("Знакоместо");
	ТабличнаяФормула.Колонки.Добавить("Скобкоместо");
	ТабличнаяФормула.Колонки.Добавить("МожноЗакрыть");
	ПредСтр = Неопределено;
	Пока Истина Цикл
		Пробел = Найти(Формула, " ");	 
		Если Пробел = -1 или Пустаястрока(СокрЛП(Формула)) Тогда Прервать; КонецЕсли;  //закончилась формула
		//Добавим символ
		НовСтр = ТабличнаяФормула.Добавить();
		НовСтр.Знакоместо = Сред(Формула, 1, Пробел - 1);
		НовСтр.МожноЗакрыть = Не (НовСтр.Знакоместо = "+" или НовСтр.Знакоместо = "*" или НовСтр.Знакоместо = ""); //небольшой хак, катализатор развития ... сразу отсекаем невозможные гены )
		НовСтр.Скобкоместо = "";
		Формула = Сред(Формула, Пробел + 1 );
	КонецЦикла;
	Возврат ТабличнаяФормула;
КонецФункции

Процедура ПриОткрытии()
	ЭлементыФормы.Цель.Значение = 850;  //Инициализация ...
	
КонецПроцедуры
